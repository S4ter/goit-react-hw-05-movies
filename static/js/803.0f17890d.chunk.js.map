{"version":3,"file":"static/js/803.0f17890d.chunk.js","mappings":"qMAEaA,EAAW,mCAAG,WAAMC,GAAN,kGAEAC,MAAM,gCAAD,OACMD,EADN,mBAJT,qCAEI,WAEjBE,EAFiB,QAMTC,GANS,sBAOf,IAAIC,MAAM,8BAPK,uBAUJF,EAASG,OAVL,cAUjBC,EAViB,yBAWhBA,GAXgB,yCAavBC,QAAQC,IAAR,MAbuB,kFAAH,qD,8ICGXC,EAAW,WACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,8GAEFf,EAAAA,EAAAA,GAAY,qBAFV,OAElBgB,EAFkB,OAGxBH,EAAUG,EAAQA,SAHM,gDAKxBR,QAAQC,IAAI,QAAZ,MALwB,yDAAH,qDAQzBM,GACD,GAAE,KAGD,4BACE,eAAIE,UAAU,kBAAd,8BACA,eAAIA,UAAU,gBAAd,SACGL,EAAOM,KAAI,SAAAC,GAAE,OACZ,yBACE,SAAC,KAAD,CAAMF,UAAU,gBAAgBG,GAAE,kBAAaD,EAAGE,IAAlD,SACGF,EAAGG,OAASH,EAAGI,QAFXJ,EAAGE,GADA,QAUrB,EC5BD,EAJa,WACX,OAAO,SAAC,EAAD,GACR,C,sBCJD,SAASG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["api/MovieApi.js","components/Trending.jsx","pages/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const API_KEY = 'f7559877f1d0830f5dd1b2777f8228a1';\n\nexport const fetchImages = async endpoint => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/${endpoint}api_key=${API_KEY}`\n    );\n\n    if (!response.ok) {\n      throw new Error('Network response is failed');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { fetchImages } from 'api/MovieApi';\nimport { Link } from 'react-router-dom';\nimport './Trending.css';\n\nexport const Trending = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const results = await fetchImages('trending/all/day?');\n        setMovies(results.results);\n      } catch (error) {\n        console.log('Error', error);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2 className=\"trending_header\">Trending Today:</h2>\n      <ul className=\"trending_list\">\n        {movies.map(el => (\n          <li key={el.id}>\n            <Link className=\"trending_item\" to={`/movies/${el.id}`}>\n              {el.title || el.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { Trending } from 'components/Trending';\n\nconst Home = () => {\n  return <Trending />;\n};\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["fetchImages","endpoint","fetch","response","ok","Error","json","data","console","log","Trending","useState","movies","setMovies","useEffect","fetchTrendingMovies","results","className","map","el","to","id","title","name","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}