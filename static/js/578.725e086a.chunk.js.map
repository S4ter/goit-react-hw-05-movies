{"version":3,"file":"static/js/578.725e086a.chunk.js","mappings":"qMAEaA,EAAW,mCAAG,WAAMC,GAAN,kGAEAC,MAAM,gCAAD,OACMD,EADN,mBAJT,qCAEI,WAEjBE,EAFiB,QAMTC,GANS,sBAOf,IAAIC,MAAM,8BAPK,uBAUJF,EAASG,OAVL,cAUjBC,EAViB,yBAWhBA,GAXgB,yCAavBC,QAAQC,IAAR,MAbuB,kFAAH,qD,uJC6DxB,EA1DkB,WAChB,IACQC,GADOC,EAAAA,EAAAA,MACPD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEAhB,EAAAA,EAAAA,GAAY,SAAD,OAAUU,EAAV,MAFX,OAEhBO,EAFgB,OAItBH,EAAWG,GACXT,QAAQC,IAAIQ,EAAZ,WALsB,gDAOtBT,QAAQC,IAAI,QAAZ,MAPsB,yDAAH,qDAUvBO,GACD,GAAE,CAACN,IACJ,IAAMQ,EAAaL,EAAQM,OACvBN,EAAQM,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IACxB,GACJ,OACE,iBAAKC,UAAU,uBAAf,WACE,iBAAKA,UAAU,kBAAf,WACE,gBACEC,IAAG,8DAAyDX,EAAQY,aACpEC,IAAG,sBAAiBb,EAAQc,OAASd,EAAQS,KAA1C,aAEL,iBAAKC,UAAU,oBAAf,WACE,eAAIA,UAAU,kBAAd,SAAiCV,EAAQc,OAASd,EAAQS,QAC1D,eAAGC,UAAU,mBAAb,mCACyC,GAAvBV,EAAQe,aAD1B,SAGA,sCACA,0BAAOf,EAAQgB,YACf,oCACA,0BAAOX,EAAWY,KAAK,eAI3B,iBAAKP,UAAU,yBAAf,WACE,qDACA,iBAAKA,UAAU,oBAAf,WACE,SAAC,KAAD,CAASA,UAAU,mBAAmBQ,GAAE,kBAAarB,EAAb,SAAxC,mBAGA,SAAC,KAAD,CACEa,UAAU,mBACVQ,GAAE,kBAAarB,EAAb,YAFJ,4BAQJ,SAAC,KAAD,MAGL,C,sBC7DD,SAASsB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["api/MovieApi.js","pages/MovieInfo.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const API_KEY = 'f7559877f1d0830f5dd1b2777f8228a1';\n\nexport const fetchImages = async endpoint => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/${endpoint}api_key=${API_KEY}`\n    );\n\n    if (!response.ok) {\n      throw new Error('Network response is failed');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n","import { fetchImages } from 'api/MovieApi';\nimport { useEffect, useState } from 'react';\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\nimport './MovieInfo.css';\n\nconst MovieInfo = () => {\n  const params = useParams();\n  const { movieId } = params;\n  const [details, setDetails] = useState([]);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const results = await fetchImages(`movie/${movieId}?`);\n\n        setDetails(results);\n        console.log(results, `results`);\n      } catch (error) {\n        console.log('Error', error);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n  const genreNames = details.genres\n    ? details.genres.map(genre => genre.name)\n    : [];\n  return (\n    <div className=\"movieInfo_containter\">\n      <div className=\"movieInfo_movie\">\n        <img\n          src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2/${details.poster_path}`}\n          alt={`poster of a ${details.title || details.name} movie`}\n        />\n        <div className=\"movieInfo_details\">\n          <h2 className=\"movieInfo_title\">{details.title || details.name}</h2>\n          <p className=\"movieInfo_rating\">\n            User Score: {`${details.vote_average * 10}%`}\n          </p>\n          <h3>Overview</h3>\n          <span>{details.overview}</span>\n          <h4>Genres</h4>\n          <span>{genreNames.join(', ')}</span>\n        </div>\n      </div>\n\n      <div className=\"moreDetails_containter\">\n        <h3>Additional information:</h3>\n        <div className=\"moreDetails_links\">\n          <NavLink className=\"moreDetails_item\" to={`/movies/${movieId}/cast`}>\n            Cast\n          </NavLink>\n          <NavLink\n            className=\"moreDetails_item\"\n            to={`/movies/${movieId}/reviews`}\n          >\n            Reviews\n          </NavLink>\n        </div>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["fetchImages","endpoint","fetch","response","ok","Error","json","data","console","log","movieId","useParams","useState","details","setDetails","useEffect","fetchMovieDetails","results","genreNames","genres","map","genre","name","className","src","poster_path","alt","title","vote_average","overview","join","to","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}